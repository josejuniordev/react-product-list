// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button component default button should render correctly the default button 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "label": "Clique em mim",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "label": "Clique em mim",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    label="Clique em mim"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component default button should render correctly the default button blocked 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "label": "Clique em mim",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-block vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-block vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "label": "Clique em mim",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-block vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-block vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    label="Clique em mim"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component default button should render correctly the default button highlighted 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "highlight": true,
      "label": "Clique em mim",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-highlighted vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-highlighted vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "highlight": true,
        "label": "Clique em mim",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-highlighted vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-highlighted vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    highlight={true}
    label="Clique em mim"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component default button should render correctly the default button with an icon 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "icon": <CompareIcon />,
      "label": "Clique em mim",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          >
            <svg
              height="1em"
              viewBox="0 0 26 26"
              width="1em"
            >
              <path
                d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                fill="currentColor"
              />
            </svg>
          </span>
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            >
              <CompareIcon />
            </span>,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            >
              <svg
                height="1em"
                viewBox="0 0 26 26"
                width="1em"
              >
                <path
                  d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                  fill="currentColor"
                />
              </svg>
            </span>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <CompareIcon />,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": Object {
                  "instance": <svg
                    height="1em"
                    viewBox="0 0 26 26"
                    width="1em"
                  >
                    <path
                      d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                      fill="currentColor"
                    />
                  </svg>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <path
                      d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                      fill="currentColor"
                    />,
                    "height": "1em",
                    "viewBox": "0 0 26 26",
                    "width": "1em",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <path
                        d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                        fill="currentColor"
                      />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "d": "M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z",
                        "fill": "currentColor",
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "path",
                    },
                  ],
                  "type": "svg",
                },
                "type": [Function],
              },
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "icon": <CompareIcon />,
        "label": "Clique em mim",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            >
              <svg
                height="1em"
                viewBox="0 0 26 26"
                width="1em"
              >
                <path
                  d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                  fill="currentColor"
                />
              </svg>
            </span>
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              >
                <CompareIcon />
              </span>,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              >
                <svg
                  height="1em"
                  viewBox="0 0 26 26"
                  width="1em"
                >
                  <path
                    d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                    fill="currentColor"
                  />
                </svg>
              </span>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <CompareIcon />,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": Object {
                    "instance": <svg
                      height="1em"
                      viewBox="0 0 26 26"
                      width="1em"
                    >
                      <path
                        d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                        fill="currentColor"
                      />
                    </svg>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <path
                        d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                        fill="currentColor"
                      />,
                      "height": "1em",
                      "viewBox": "0 0 26 26",
                      "width": "1em",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <path
                          d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                          fill="currentColor"
                        />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "d": "M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z",
                          "fill": "currentColor",
                        },
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "path",
                      },
                    ],
                    "type": "svg",
                  },
                  "type": [Function],
                },
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    icon={<CompareIcon />}
    label="Clique em mim"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component default button should render correctly the default large button 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "label": "Clique em mim",
      "size": "large",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-large"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-large",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "label": "Clique em mim",
        "size": "large",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-large"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-large",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    label="Clique em mim"
    size="large"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component default button should render correctly the default large button with all options 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "highlight": true,
      "label": "Clique em mim",
      "size": "large",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-highlighted vv-button--is-block vv-button--is-large"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-highlighted vv-button--is-block vv-button--is-large",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "highlight": true,
        "label": "Clique em mim",
        "size": "large",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-highlighted vv-button--is-block vv-button--is-large"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-highlighted vv-button--is-block vv-button--is-large",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    highlight={true}
    label="Clique em mim"
    size="large"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component default button should render correctly the default medium button with all options 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "highlight": true,
      "label": "Clique em mim",
      "size": "medium",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-highlighted vv-button--is-block vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-highlighted vv-button--is-block vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "highlight": true,
        "label": "Clique em mim",
        "size": "medium",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-highlighted vv-button--is-block vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-highlighted vv-button--is-block vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    highlight={true}
    label="Clique em mim"
    size="medium"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component default button should render correctly the default small button 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "label": "Clique em mim",
      "size": "small",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-small"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-small",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "label": "Clique em mim",
        "size": "small",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-small"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-small",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    label="Clique em mim"
    size="small"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component default button should render correctly the default small button with all options 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "highlight": true,
      "label": "Clique em mim",
      "size": "small",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-highlighted vv-button--is-block vv-button--is-small"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-highlighted vv-button--is-block vv-button--is-small",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "highlight": true,
        "label": "Clique em mim",
        "size": "small",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-highlighted vv-button--is-block vv-button--is-small"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-highlighted vv-button--is-block vv-button--is-small",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    highlight={true}
    label="Clique em mim"
    size="small"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component link button should render correctly the link button 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "label": "Clique em mim",
      "type": "link",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-link vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-link vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "label": "Clique em mim",
        "type": "link",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-link vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-link vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    label="Clique em mim"
    type="link"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component link button should render correctly the link button blocked 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "label": "Clique em mim",
      "type": "link",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-link vv-button--is-block vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-link vv-button--is-block vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "label": "Clique em mim",
        "type": "link",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-link vv-button--is-block vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-link vv-button--is-block vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    label="Clique em mim"
    type="link"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component link button should render correctly the link button highlighted 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "highlight": true,
      "label": "Clique em mim",
      "type": "link",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "highlight": true,
        "label": "Clique em mim",
        "type": "link",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    highlight={true}
    label="Clique em mim"
    type="link"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component link button should render correctly the link button with an icon 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "icon": <CompareIcon />,
      "label": "Clique em mim",
      "type": "link",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-link vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          >
            <svg
              height="1em"
              viewBox="0 0 26 26"
              width="1em"
            >
              <path
                d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                fill="currentColor"
              />
            </svg>
          </span>
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            >
              <CompareIcon />
            </span>,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-link vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            >
              <svg
                height="1em"
                viewBox="0 0 26 26"
                width="1em"
              >
                <path
                  d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                  fill="currentColor"
                />
              </svg>
            </span>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <CompareIcon />,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": Object {
                  "instance": <svg
                    height="1em"
                    viewBox="0 0 26 26"
                    width="1em"
                  >
                    <path
                      d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                      fill="currentColor"
                    />
                  </svg>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <path
                      d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                      fill="currentColor"
                    />,
                    "height": "1em",
                    "viewBox": "0 0 26 26",
                    "width": "1em",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <path
                        d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                        fill="currentColor"
                      />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "d": "M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z",
                        "fill": "currentColor",
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "path",
                    },
                  ],
                  "type": "svg",
                },
                "type": [Function],
              },
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "icon": <CompareIcon />,
        "label": "Clique em mim",
        "type": "link",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-link vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            >
              <svg
                height="1em"
                viewBox="0 0 26 26"
                width="1em"
              >
                <path
                  d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                  fill="currentColor"
                />
              </svg>
            </span>
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              >
                <CompareIcon />
              </span>,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-link vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              >
                <svg
                  height="1em"
                  viewBox="0 0 26 26"
                  width="1em"
                >
                  <path
                    d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                    fill="currentColor"
                  />
                </svg>
              </span>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <CompareIcon />,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": Object {
                    "instance": <svg
                      height="1em"
                      viewBox="0 0 26 26"
                      width="1em"
                    >
                      <path
                        d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                        fill="currentColor"
                      />
                    </svg>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <path
                        d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                        fill="currentColor"
                      />,
                      "height": "1em",
                      "viewBox": "0 0 26 26",
                      "width": "1em",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <path
                          d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                          fill="currentColor"
                        />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "d": "M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z",
                          "fill": "currentColor",
                        },
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "path",
                      },
                    ],
                    "type": "svg",
                  },
                  "type": [Function],
                },
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    icon={<CompareIcon />}
    label="Clique em mim"
    type="link"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component link button should render correctly the link large button 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "label": "Clique em mim",
      "size": "large",
      "type": "link",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-link vv-button--is-large"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-link vv-button--is-large",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "label": "Clique em mim",
        "size": "large",
        "type": "link",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-link vv-button--is-large"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-link vv-button--is-large",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    label="Clique em mim"
    size="large"
    type="link"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component link button should render correctly the link large button with all options 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "highlight": true,
      "label": "Clique em mim",
      "size": "large",
      "type": "link",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-block vv-button--is-large"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-block vv-button--is-large",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "highlight": true,
        "label": "Clique em mim",
        "size": "large",
        "type": "link",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-block vv-button--is-large"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-block vv-button--is-large",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    highlight={true}
    label="Clique em mim"
    size="large"
    type="link"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component link button should render correctly the link medium button with all options 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "highlight": true,
      "label": "Clique em mim",
      "size": "medium",
      "type": "link",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-block vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-block vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "highlight": true,
        "label": "Clique em mim",
        "size": "medium",
        "type": "link",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-block vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-block vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    highlight={true}
    label="Clique em mim"
    size="medium"
    type="link"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component link button should render correctly the link small button 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "label": "Clique em mim",
      "size": "small",
      "type": "link",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-link vv-button--is-small"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-link vv-button--is-small",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "label": "Clique em mim",
        "size": "small",
        "type": "link",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-link vv-button--is-small"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-link vv-button--is-small",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    label="Clique em mim"
    size="small"
    type="link"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component link button should render correctly the link small button with all options 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "highlight": true,
      "label": "Clique em mim",
      "size": "small",
      "type": "link",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-block vv-button--is-small"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-block vv-button--is-small",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "highlight": true,
        "label": "Clique em mim",
        "size": "small",
        "type": "link",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-block vv-button--is-small"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-link vv-button--is-highlighted vv-button--is-block vv-button--is-small",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    highlight={true}
    label="Clique em mim"
    size="small"
    type="link"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component primary button should render correctly the primary button 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "label": "Clique em mim",
      "type": "primary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-primary vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-primary vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "label": "Clique em mim",
        "type": "primary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-primary vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-primary vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    label="Clique em mim"
    type="primary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component primary button should render correctly the primary button blocked 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "label": "Clique em mim",
      "type": "primary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-primary vv-button--is-block vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-primary vv-button--is-block vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "label": "Clique em mim",
        "type": "primary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-primary vv-button--is-block vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-primary vv-button--is-block vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    label="Clique em mim"
    type="primary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component primary button should render correctly the primary button highlighted 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "highlight": true,
      "label": "Clique em mim",
      "type": "primary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "highlight": true,
        "label": "Clique em mim",
        "type": "primary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    highlight={true}
    label="Clique em mim"
    type="primary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component primary button should render correctly the primary button with an icon 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "icon": <CompareIcon />,
      "label": "Clique em mim",
      "type": "primary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-primary vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          >
            <svg
              height="1em"
              viewBox="0 0 26 26"
              width="1em"
            >
              <path
                d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                fill="currentColor"
              />
            </svg>
          </span>
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            >
              <CompareIcon />
            </span>,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-primary vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            >
              <svg
                height="1em"
                viewBox="0 0 26 26"
                width="1em"
              >
                <path
                  d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                  fill="currentColor"
                />
              </svg>
            </span>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <CompareIcon />,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": Object {
                  "instance": <svg
                    height="1em"
                    viewBox="0 0 26 26"
                    width="1em"
                  >
                    <path
                      d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                      fill="currentColor"
                    />
                  </svg>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <path
                      d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                      fill="currentColor"
                    />,
                    "height": "1em",
                    "viewBox": "0 0 26 26",
                    "width": "1em",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <path
                        d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                        fill="currentColor"
                      />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "d": "M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z",
                        "fill": "currentColor",
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "path",
                    },
                  ],
                  "type": "svg",
                },
                "type": [Function],
              },
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "icon": <CompareIcon />,
        "label": "Clique em mim",
        "type": "primary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-primary vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            >
              <svg
                height="1em"
                viewBox="0 0 26 26"
                width="1em"
              >
                <path
                  d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                  fill="currentColor"
                />
              </svg>
            </span>
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              >
                <CompareIcon />
              </span>,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-primary vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              >
                <svg
                  height="1em"
                  viewBox="0 0 26 26"
                  width="1em"
                >
                  <path
                    d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                    fill="currentColor"
                  />
                </svg>
              </span>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <CompareIcon />,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": Object {
                    "instance": <svg
                      height="1em"
                      viewBox="0 0 26 26"
                      width="1em"
                    >
                      <path
                        d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                        fill="currentColor"
                      />
                    </svg>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <path
                        d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                        fill="currentColor"
                      />,
                      "height": "1em",
                      "viewBox": "0 0 26 26",
                      "width": "1em",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <path
                          d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                          fill="currentColor"
                        />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "d": "M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z",
                          "fill": "currentColor",
                        },
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "path",
                      },
                    ],
                    "type": "svg",
                  },
                  "type": [Function],
                },
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    icon={<CompareIcon />}
    label="Clique em mim"
    type="primary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component primary button should render correctly the primary large button 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "label": "Clique em mim",
      "size": "large",
      "type": "primary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-primary vv-button--is-large"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-primary vv-button--is-large",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "label": "Clique em mim",
        "size": "large",
        "type": "primary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-primary vv-button--is-large"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-primary vv-button--is-large",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    label="Clique em mim"
    size="large"
    type="primary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component primary button should render correctly the primary large button with all options 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "highlight": true,
      "label": "Clique em mim",
      "size": "large",
      "type": "primary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-block vv-button--is-large"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-block vv-button--is-large",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "highlight": true,
        "label": "Clique em mim",
        "size": "large",
        "type": "primary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-block vv-button--is-large"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-block vv-button--is-large",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    highlight={true}
    label="Clique em mim"
    size="large"
    type="primary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component primary button should render correctly the primary medium button with all options 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "highlight": true,
      "label": "Clique em mim",
      "size": "medium",
      "type": "primary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-block vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-block vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "highlight": true,
        "label": "Clique em mim",
        "size": "medium",
        "type": "primary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-block vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-block vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    highlight={true}
    label="Clique em mim"
    size="medium"
    type="primary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component primary button should render correctly the primary small button 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "label": "Clique em mim",
      "size": "small",
      "type": "primary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-primary vv-button--is-small"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-primary vv-button--is-small",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "label": "Clique em mim",
        "size": "small",
        "type": "primary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-primary vv-button--is-small"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-primary vv-button--is-small",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    label="Clique em mim"
    size="small"
    type="primary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component primary button should render correctly the primary small button with all options 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "highlight": true,
      "label": "Clique em mim",
      "size": "small",
      "type": "primary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-block vv-button--is-small"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-block vv-button--is-small",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "highlight": true,
        "label": "Clique em mim",
        "size": "small",
        "type": "primary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-block vv-button--is-small"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-primary vv-button--is-highlighted vv-button--is-block vv-button--is-small",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    highlight={true}
    label="Clique em mim"
    size="small"
    type="primary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component secondary button should render correctly the secondary button 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "label": "Clique em mim",
      "type": "secondary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-secondary vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-secondary vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "label": "Clique em mim",
        "type": "secondary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-secondary vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-secondary vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    label="Clique em mim"
    type="secondary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component secondary button should render correctly the secondary button blocked 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "label": "Clique em mim",
      "type": "secondary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-secondary vv-button--is-block vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-secondary vv-button--is-block vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "label": "Clique em mim",
        "type": "secondary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-secondary vv-button--is-block vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-secondary vv-button--is-block vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    label="Clique em mim"
    type="secondary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component secondary button should render correctly the secondary button highlighted 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "highlight": true,
      "label": "Clique em mim",
      "type": "secondary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "highlight": true,
        "label": "Clique em mim",
        "type": "secondary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    highlight={true}
    label="Clique em mim"
    type="secondary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component secondary button should render correctly the secondary button with an icon 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "icon": <CompareIcon />,
      "label": "Clique em mim",
      "type": "secondary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-secondary vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          >
            <svg
              height="1em"
              viewBox="0 0 26 26"
              width="1em"
            >
              <path
                d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                fill="currentColor"
              />
            </svg>
          </span>
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            >
              <CompareIcon />
            </span>,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-secondary vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            >
              <svg
                height="1em"
                viewBox="0 0 26 26"
                width="1em"
              >
                <path
                  d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                  fill="currentColor"
                />
              </svg>
            </span>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <CompareIcon />,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": Object {
                  "instance": <svg
                    height="1em"
                    viewBox="0 0 26 26"
                    width="1em"
                  >
                    <path
                      d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                      fill="currentColor"
                    />
                  </svg>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <path
                      d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                      fill="currentColor"
                    />,
                    "height": "1em",
                    "viewBox": "0 0 26 26",
                    "width": "1em",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <path
                        d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                        fill="currentColor"
                      />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "d": "M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z",
                        "fill": "currentColor",
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "path",
                    },
                  ],
                  "type": "svg",
                },
                "type": [Function],
              },
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "icon": <CompareIcon />,
        "label": "Clique em mim",
        "type": "secondary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-secondary vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            >
              <svg
                height="1em"
                viewBox="0 0 26 26"
                width="1em"
              >
                <path
                  d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                  fill="currentColor"
                />
              </svg>
            </span>
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              >
                <CompareIcon />
              </span>,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-secondary vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              >
                <svg
                  height="1em"
                  viewBox="0 0 26 26"
                  width="1em"
                >
                  <path
                    d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                    fill="currentColor"
                  />
                </svg>
              </span>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <CompareIcon />,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": Object {
                    "instance": <svg
                      height="1em"
                      viewBox="0 0 26 26"
                      width="1em"
                    >
                      <path
                        d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                        fill="currentColor"
                      />
                    </svg>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <path
                        d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                        fill="currentColor"
                      />,
                      "height": "1em",
                      "viewBox": "0 0 26 26",
                      "width": "1em",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <path
                          d="M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z"
                          fill="currentColor"
                        />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "d": "M24.973 16.125c-.01-.053-.012-.109-.033-.157L20.361 5.173c-.004-.012-.015-.019-.02-.03-.02-.041-.048-.075-.075-.112-.022-.03-.037-.066-.065-.093-.01-.011-.024-.02-.036-.03-.032-.028-.07-.046-.105-.069-.02-.012-.037-.027-.057-.037-.014-.007-.024-.02-.04-.027h-.002c-.013-.006-.028-.007-.041-.012-.038-.014-.079-.016-.12-.023-.055-.01-.11-.02-.167-.018-.011 0-.022-.004-.033-.003l-4.803.459A1.997 1.997 0 0013 4.039c-.927 0-1.702.638-1.927 1.495l-4.815.46c-.036.004-.065.022-.099.03-.039.01-.079.01-.116.026l-.012.003c-.01.004-.016.013-.026.018-.041.02-.074.048-.11.074-.032.023-.066.04-.094.068l-.03.034c-.03.034-.05.075-.074.115-.017.029-.043.05-.056.081L1.06 17.02v.003c-.017.038-.017.083-.027.125-.013.056-.033.111-.034.167v.002c0 2.94 2.39 5.333 5.33 5.333a5.337 5.337 0 005.329-5.333v-.002c0-.056-.021-.111-.035-.167-.01-.042-.01-.087-.026-.125v-.003l-4.17-9.63 3.841-.367A1.993 1.993 0 0013 8.039c.879 0 1.618-.573 1.886-1.362l3.602-.344-4.087 9.635c-.02.048-.022.104-.032.157-.009.046-.028.09-.028.136 0 2.94 2.39 5.332 5.33 5.332A5.336 5.336 0 0025 16.26c0-.046-.019-.09-.027-.136zm-1.856-.614h-6.893l3.447-8.125 3.446 8.125zM6.33 8.629l3.437 7.938H2.892L6.33 8.63zm0 12.521a3.835 3.835 0 01-3.753-3.083h7.507a3.835 3.835 0 01-3.754 3.083zM13 6.54a.5.5 0 11.001-1.002A.5.5 0 0113 6.539zm6.67 13.553a3.835 3.835 0 01-3.753-3.082h7.507a3.835 3.835 0 01-3.753 3.082z",
                          "fill": "currentColor",
                        },
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "path",
                      },
                    ],
                    "type": "svg",
                  },
                  "type": [Function],
                },
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    icon={<CompareIcon />}
    label="Clique em mim"
    type="secondary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component secondary button should render correctly the secondary large button 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "label": "Clique em mim",
      "size": "large",
      "type": "secondary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-secondary vv-button--is-large"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-secondary vv-button--is-large",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "label": "Clique em mim",
        "size": "large",
        "type": "secondary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-secondary vv-button--is-large"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-secondary vv-button--is-large",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    label="Clique em mim"
    size="large"
    type="secondary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component secondary button should render correctly the secondary large button with all options 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "highlight": true,
      "label": "Clique em mim",
      "size": "large",
      "type": "secondary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-block vv-button--is-large"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-block vv-button--is-large",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "highlight": true,
        "label": "Clique em mim",
        "size": "large",
        "type": "secondary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-block vv-button--is-large"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-block vv-button--is-large",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    highlight={true}
    label="Clique em mim"
    size="large"
    type="secondary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component secondary button should render correctly the secondary medium button with all options 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "highlight": true,
      "label": "Clique em mim",
      "size": "medium",
      "type": "secondary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-block vv-button--is-medium"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-block vv-button--is-medium",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "highlight": true,
        "label": "Clique em mim",
        "size": "medium",
        "type": "secondary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-block vv-button--is-medium"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-block vv-button--is-medium",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    highlight={true}
    label="Clique em mim"
    size="medium"
    type="secondary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component secondary button should render correctly the secondary small button 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "label": "Clique em mim",
      "size": "small",
      "type": "secondary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-secondary vv-button--is-small"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-secondary vv-button--is-small",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "label": "Clique em mim",
        "size": "small",
        "type": "secondary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-secondary vv-button--is-small"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-secondary vv-button--is-small",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    label="Clique em mim"
    size="small"
    type="secondary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;

exports[`Button component secondary button should render correctly the secondary small button with all options 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "block": true,
      "highlight": true,
      "label": "Clique em mim",
      "size": "small",
      "type": "secondary",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <button
          class="vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-block vv-button--is-small"
        >
          <span
            class="vv-button__icon"
          />
          Clique em mim
        </button>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="vv-button__icon"
            />,
            "Clique em mim",
          ],
          "className": "vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-block vv-button--is-small",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="vv-button__icon"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
              "className": "vv-button__icon",
            },
            "ref": null,
            "rendered": Array [
              null,
            ],
            "type": "span",
          },
          "Clique em mim",
        ],
        "type": "button",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.memo),
      "compare": null,
      "type": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "block": true,
        "highlight": true,
        "label": "Clique em mim",
        "size": "small",
        "type": "secondary",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <button
            class="vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-block vv-button--is-small"
          >
            <span
              class="vv-button__icon"
            />
            Clique em mim
          </button>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="vv-button__icon"
              />,
              "Clique em mim",
            ],
            "className": "vv-button vv-button--is-secondary vv-button--is-highlighted vv-button--is-block vv-button--is-small",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <span
                class="vv-button__icon"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "vv-button__icon",
              },
              "ref": null,
              "rendered": Array [
                null,
              ],
              "type": "span",
            },
            "Clique em mim",
          ],
          "type": "button",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    block={true}
    highlight={true}
    label="Clique em mim"
    size="small"
    type="secondary"
  />,
  Symbol(enzyme.__updatedBy__): null,
}
`;
